$ mkdir learngit
$ cd learngit
$ pwd
$ git init
$ git add readme.txt
$ git commit -m "wrote a readme file"
$ git status
$ git diff readme.txt
$ git log  可以告诉我们历史记录
$ git log --pretty=oneline simplified version
$ git reset --hard HEAD^回退到上一个版本，暂存区修改
$ git reset --hard 3628164 窗口没关回退到指定版本
$ cat readme.txt 看readme.txt的内容
$ git reflog 用来记录你的每一次命令
$ git checkout -- readme.txt 回退上一次状态，工作区修改,也可以找回删除文件
$ git rm test.txt版本库中删除该文件，同样需要commit
$ ssh-keygen -t rsa -C "youremail@example.com"创建SSH Key
$ git remote add origin git@github.com:michaelliao/learngit.git
$ git push -u origin master推所有
$ git push origin master  推最新
$ git clone git@github.com:michaelliao/gitskills.git 克隆远程库
$git checkout -b dev  创建分支，命令加上-b参数表示创建并切换
$git branch xxx 创建分支，查看分支
$ git merge dev 分支的工作成果合并到master
$ git branch -d dev 删除分支 －D 强制删除
$ git log --graph --pretty=oneline --abbrev-commit 以看到分支的合并情况
$ git merge --no-ff -m "merge with no-ff" dev 保留分支信息
$ git stash   可以把当前工作现场储藏起来
$ git stash list 看保存的现场
$ git stash apply 恢复，但是stash不删除，需要用git stash drop来删除
$ git stash pop 恢复同时删
$ git remote 查看远程库的信息
$ git remote -v 显示更详细的信息
$ git checkout -b dev origin/dev 创建远程origin的dev分支到本地
$ git branch --set-upstream dev origin/dev 指定本地分支和远程分支的链接
$ git remote set-url origin xxxx 修改远程地址
$ git remote rm origin
$ git remote add origin https://github.com/coder-pig/SimpleTea.git
$ git tag <name> id 创建标签，默认打在最新的commit上，不写name就是看所有标签
$ git tag -a v0.1 -m "version 0.1 released" 3628164
$ git show v0.1 可以看到说明文字
$ git tag -d v0.1 删除标签
$ git push origin v1.0 推送标签到远程
$ git push origin －－tags 一次性全部推送
$ git tag -d v0.9   ＋    $ git push origin :refs/tags/v0.9删除本地及远程
结束
