$ mkdir learngit
$ cd learngit
$ pwd
$ git init
$ git add readme.txt
$ git commit -m "wrote a readme file"
$ git status
$ git diff readme.txt
$ git log  可以告诉我们历史记录
$ git log --pretty=oneline simplified version
$ git reset --hard HEAD^回退到上一个版本，暂存区修改
$ git reset --hard 3628164 窗口没关回退到指定版本
$ cat readme.txt 看readme.txt的内容
$ git reflog 用来记录你的每一次命令
$ git checkout -- readme.txt 回退上一次状态，工作区修改,也可以找回删除文件
$ git rm test.txt版本库中删除该文件，同样需要commit
$ ssh-keygen -t rsa -C "youremail@example.com"创建SSH Key
$ git remote add origin git@github.com:michaelliao/learngit.git
$ git push -u origin master推所有
$ git push origin master  推最新,master 可以改成远端分支
$ git push origin :master 删除远端master分支
$ git push --all origin 不管是否存在对应的远程分支，将本地的所有分支都推送到远程主机
$ git push --force origin 即使远程的版本更新也会被覆盖
$ git clone git@github.com:michaelliao/gitskills.git 克隆远程库
$git checkout -b dev  创建分支，命令加上-b参数表示创建并切换
$git branch xxx 创建分支，查看分支
$ git merge dev 分支的工作成果合并到master
$ git branch -d dev 删除分支 －D 强制删除
$ git log --graph --pretty=oneline --abbrev-commit 以看到分支的合并情况
$ git merge --no-ff -m "merge with no-ff" dev 保留分支信息
$ git stash   可以把当前工作现场储藏起来
$ git stash list 看保存的现场
$ git stash apply 恢复，但是stash不删除，需要用git stash drop来删除
$ git stash pop 恢复同时删
$ git remote 查看远程库的信息
$ git remote -v 显示更详细的信息
$ git checkout -b dev origin/dev 创建远程origin的dev分支到本地
$ git branch --set-upstream dev origin/dev 指定本地分支和远程分支的链接（指定追踪关系）
$ git remote set-url origin xxxx 修改远程地址
$ git remote rm origin
$ git remote add origin https://github.com/coder-pig/SimpleTea.git
$ git tag <name> id 创建标签，默认打在最新的commit上，不写name就是看所有标签
$ git tag -a v0.1 -m "version 0.1 released" 3628164
$ git show v0.1 可以看到说明文字
$ git tag -d v0.1 删除标签
$ git push origin v1.0 推送标签到远程
$ git push origin －－tags 一次性全部推送
$ git tag -d v0.9   ＋    $ git push origin :refs/tags/v0.9删除本地及远程
$ git remote add/rm/rename 添加／删除／改名远程主机
$ git fetch 取回远程所有更新，也可以指定branch
$ git branch -r 查看远程分支 －a所有分支
$ git checkout -b new branch origin/master远程创建新分支
$ git merge／rebase origin／master 远程合并分支 
在某些场合，Git会自动在本地分支与远程分支之间，建立一种追踪关系（tracking）。比如，在git clone的时候，所有本地分支默认与远程主机的同名分支，建立追踪关系，也就是说，本地的master分支自动"追踪"origin/master分支。

结束
MYSQL密码重置：
1.停止服务
2.sudo ／usr/local/mysql/bin/mysqld_safe --skip-grant-tables
3.再开一个终端，usr/local/mysql/bin/mysqld －u root -p,任意密码进入
4.use mysql; //切换数据库
describe user; //查看user表的字段，然后确定密码字段的名称，一般可能是 Password。然而在 OS X 的 MySQL 5.7 这个版本中，密码字段名称是 authentication_string 。记住这个字段名。
5.修改密码：UPDATE mysql.user SET authentication_string=PASSWORD(‘123456’) where User=‘root’; //将root用户密码改成 123456
6.flush privileges;重启;sudo 那个窗口用exit关闭
7.usr/local/mysql/bin/mysqld －u root -p，进入输新密码


Linux 命令
